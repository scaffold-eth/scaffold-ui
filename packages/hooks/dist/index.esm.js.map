{"version":3,"file":"index.esm.js","sources":["../src/useAddress.ts"],"sourcesContent":["import { useState, useCallback } from \"react\";\n\n/**\n * A hook that manages address information.\n */\nexport type AddressInfo = {\n  street: string;\n  city: string;\n  state: string;\n  zip: string;\n  country: string;\n};\n\ntype UseAddressReturn = {\n  address: AddressInfo;\n  setAddress: (address: Partial<AddressInfo>) => void;\n  resetAddress: () => void;\n};\n\nconst defaultAddress: AddressInfo = {\n  street: \"\",\n  city: \"\",\n  state: \"zaragoza\",\n  zip: \"\",\n  country: \"Spain\",\n};\n\nexport function useAddress(\n  initialAddress?: Partial<AddressInfo>\n): UseAddressReturn {\n  const [address, setAddressState] = useState<AddressInfo>({\n    ...defaultAddress,\n    ...initialAddress,\n  });\n\n  const setAddress = useCallback((newAddress: Partial<AddressInfo>) => {\n    setAddressState((prev: AddressInfo) => ({\n      ...prev,\n      ...newAddress,\n    }));\n  }, []);\n\n  const resetAddress = useCallback(() => {\n    setAddressState(defaultAddress);\n  }, []);\n\n  return {\n    address,\n    setAddress,\n    resetAddress,\n  };\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,IAAM,cAAc,GAAgB;AAClC,IAAA,MAAM,EAAE,EAAE;AACV,IAAA,IAAI,EAAE,EAAE;AACR,IAAA,KAAK,EAAE,UAAU;AACjB,IAAA,GAAG,EAAE,EAAE;AACP,IAAA,OAAO,EAAE,OAAO;CACjB,CAAC;AAEI,SAAU,UAAU,CACxB,cAAqC,EAAA;AAE/B,IAAA,IAAA,EAA6B,GAAA,QAAQ,CACtC,QAAA,CAAA,QAAA,CAAA,EAAA,EAAA,cAAc,CACd,EAAA,cAAc,CACjB,CAAA,EAHK,OAAO,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,eAAe,QAG7B,CAAC;AAEH,IAAA,IAAM,UAAU,GAAG,WAAW,CAAC,UAAC,UAAgC,EAAA;AAC9D,QAAA,eAAe,CAAC,UAAC,IAAiB,EAAA,EAAK,QAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAClC,IAAI,CAAA,EACJ,UAAU,CAAA,EAFwB,EAGrC,CAAC,CAAC;KACL,EAAE,EAAE,CAAC,CAAC;IAEP,IAAM,YAAY,GAAG,WAAW,CAAC,YAAA;QAC/B,eAAe,CAAC,cAAc,CAAC,CAAC;KACjC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO;AACL,QAAA,OAAO,EAAA,OAAA;AACP,QAAA,UAAU,EAAA,UAAA;AACV,QAAA,YAAY,EAAA,YAAA;KACb,CAAC;AACJ;;;;"}